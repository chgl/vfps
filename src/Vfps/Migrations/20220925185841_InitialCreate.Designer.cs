// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vfps.Data;

#nullable disable

namespace Vfps.Migrations
{
    [DbContext(typeof(PseudonymContext))]
    [Migration("20220925185841_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.1.22426.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Vfps.Data.Models.Namespace", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PseudonymGenerationMethod")
                        .HasColumnType("integer");

                    b.Property<long>("PseudonymLength")
                        .HasColumnType("bigint");

                    b.Property<string>("PseudonymPrefix")
                        .HasColumnType("text");

                    b.Property<string>("PseudonymSuffix")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Namespaces");
                });

            modelBuilder.Entity("Vfps.Data.Models.Pseudonym", b =>
                {
                    b.Property<string>("NamespaceName")
                        .HasColumnType("text");

                    b.Property<string>("OriginalValue")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PseudonymValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NamespaceName", "OriginalValue");

                    b.ToTable("Pseudonyms");
                });

            modelBuilder.Entity("Vfps.Data.Models.Pseudonym", b =>
                {
                    b.HasOne("Vfps.Data.Models.Namespace", null)
                        .WithMany("Pseudonyms")
                        .HasForeignKey("NamespaceName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vfps.Data.Models.Namespace", b =>
                {
                    b.Navigation("Pseudonyms");
                });
#pragma warning restore 612, 618
        }
    }
}
