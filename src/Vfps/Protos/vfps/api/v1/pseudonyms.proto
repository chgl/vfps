syntax = "proto3";

package vfps.api.v1;

import "Protos/google/api/annotations.proto";
import "Protos/vfps/api/v1/meta.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Vfps.Protos";

// service to manage pseudonyms
service PseudonymService {
  // create a new pseudonym in the given namespace for an original value
  rpc Create(PseudonymServiceCreateRequest) returns (PseudonymServiceCreateResponse) {
    option (google.api.http) = {
      post: "/v1/namespaces/{namespace}/pseudonyms"
      body: "*"
    };
  }

  // get information about the given pseudonym. Including its original value.
  rpc Get(PseudonymServiceGetRequest) returns (PseudonymServiceGetResponse) {
    option (google.api.http) = {get: "/v1/namespaces/{namespace}/pseudonyms/{pseudonym_value}"};
  }

  // list all pseudonyms in the given namespace
  rpc List(PseudonymServiceListRequest) returns (PseudonymServiceListResponse) {
    option (google.api.http) = {get: "/v1/namespaces/{namespace}/pseudonyms"};
  }
}

// request to list all pseudonyms in a namespace
message PseudonymServiceListRequest {
  // the namespace to list the containing pseudonyms of
  string namespace = 1;
  // specify the maximum number of results to be returned by the server.
  // If the page_size is 0, the server will decide the number of results to be returned.
  int32 page_size = 2;
  // an opaque pagination token. Use this field to request a specific page of the list results.
  string page_token = 3;
  // include the total number of pseudonyms in the namespace as part of the response
  bool include_total_size = 4;
}

// response listing all pseudonyms in a namespace
message PseudonymServiceListResponse {
  // the namespace containing the pseudonyms
  string namespace = 1;
  // if `include_total_size` is set to `true` in the request,
  // this is the total number of pseudonyms in the namespace
  optional int64 total_size = 2;
  // an opaque pagination token. Use this field to request the next
  // page of results by setting the request's `page_token` to this value.
  string next_page_token = 3;
  // list of pseudonyms in the namespace
  repeated Pseudonym pseudonyms = 4;
}

// contents of the PseudonymServiceList pagination token
message PseudonymListPaginationToken {
  // return only pseudonyms that were created on or before this date
  google.protobuf.Timestamp pseudonyms_created_on_or_before = 1;
  // how deep inside the list of pseudonyms we currently are
  int32 offset = 2;
}

// message to fetch details for a given pseudonym
message PseudonymServiceGetRequest {
  // the namespace the pseudonym is a part of
  string namespace = 1;
  // the actual pseudonym
  string pseudonym_value = 2;
}

// response for getting a pseudonym entity
message PseudonymServiceGetResponse {
  // the found pseudonym
  Pseudonym pseudonym = 1;
}

// request to pseudonymize and store a given value
message PseudonymServiceCreateRequest {
  // the namespace in which the pseudonym should be created
  string namespace = 1;
  // the original value to be pseudonymized
  string original_value = 2;
}

// response for creating a pseudonym entity
message PseudonymServiceCreateResponse {
  // the created pseudonym
  Pseudonym pseudonym = 1;
}

// the pseudonym entity
message Pseudonym {
  // metadata about the pseudonym
  Meta meta = 1;
  // the namespace of the pseudonym
  string namespace = 2;
  // the original value that was pseudonymized
  string original_value = 3;
  // the pseudonym created for the original value
  string pseudonym_value = 4;
}
