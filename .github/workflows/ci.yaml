name: ci

on:
  push:
    branches: [master]
  release:
    types: [created]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      security-events: write
      packages: write
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
        with:
          fetch-depth: 0

      - name: Container meta for main image
        id: container_meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # tag=v4
        with:
          images: |
            ghcr.io/${{ github.repository }}

      - name: Container meta for migrations image
        id: container_migrations_meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # tag=v4
        with:
          images: |
            ghcr.io/${{ github.repository }}-migrations

      - name: Container meta for the unit test image
        id: container_tests_meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # tag=v4
        with:
          images: |
            ghcr.io/${{ github.repository }}-tests

      - name: Set up QEMU
        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # tag=v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # tag=v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # tag=v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push main image
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94 # tag=v3
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.container_meta.outputs.tags }}
          labels: ${{ steps.container_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run unit tests
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94 # tag=v3
        with:
          push: false
          load: true
          tags: ${{ steps.container_tests_meta.outputs.tags }}
          labels: ${{ steps.container_tests_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: unit-test

      - name: Build and push migrations image
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94 # tag=v3
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.container_migrations_meta.outputs.tags }}
          labels: ${{ steps.container_migrations_meta.outputs.labels }}
          target: migrations
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Copy unit test coverage reports from container
        env:
          UNIT_TEST_IMAGE: ${{ fromJson(steps.container_tests_meta.outputs.json).tags[0] }}
        run: |
          docker create --name=unit-test-container "${UNIT_TEST_IMAGE}"
          docker cp unit-test-container:/build/src/Vfps.Tests/coverage ./coverage

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@51cc3a756ddcd398d447c044c02cb6aa83fdae95 # tag=v1.3.0
        with:
          filename: coverage/**/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "60 80"

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@39c5b5dc7717447d0cba270cd115037d32d28443 # tag=v2.2.0
        if: ${{ github.event_name == 'pull_request' }}
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Install Cosign
        if: ${{ github.event_name != 'pull_request' }}
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 # tag=v2.6.0

      - name: Sign images
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
          IMAGES: ${{ steps.container_meta.outputs.tags }}
        run: |
          while read -r image; do
            if [[ $image = quay.io/* ]]; then
              echo "Skipping '$image' hosted on quay.io"
              continue
            fi
            echo "Signing '$image' using keyless approach"
            cosign sign "$image"
          done <<< "$IMAGES"

      - name: Sign migration images
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
          IMAGES: ${{ steps.container_migrations_meta.outputs.tags }}
        run: |
          while read -r image; do
            if [[ $image = quay.io/* ]]; then
              echo "Skipping '$image' hosted on quay.io"
              continue
            fi
            echo "Signing '$image' using keyless approach"
            cosign sign "$image"
          done <<< "$IMAGES"
